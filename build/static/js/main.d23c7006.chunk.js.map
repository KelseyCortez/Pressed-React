{"version":3,"sources":["components/CharityCard.jsx","components/CharityNav.jsx","config.js","components/firebase.js","components/Articles.jsx","components/Jumbotronheader.js","components/Suggestions.jsx","components/About.jsx","components/Home.jsx","App.js","serviceWorker.js","index.js"],"names":["CharityCard","Container","Table","responsive","striped","bordered","hover","variant","this","props","charity","charityName","mission","currentRating","rating","href","charityNavigatorURL","Component","CharityNav","state","fetch","then","res","json","data","setState","map","index","key","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","Articles","articles","collection","get","querySnapshot","newArticles","forEach","doc","articleString","content","replace","newObj","push","article","Accordion","Card","className","Toggle","as","Header","eventKey","title","Collapse","Body","Text","dangerouslySetInnerHTML","__html","Jumbotronheader","Jumbotron","fluid","Suggestions","name","idea","notSubmitted","handleSubmit","e","preventDefault","add","JSON","stringify","handleChange","target","value","Form","onSubmit","Group","controlId","Label","Control","type","placeholder","onChange","rows","Button","Subtitle","Link","About","Title","style","fontSize","Home","Navbar","fixed","bg","Brand","Nav","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d23c7006.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Table, Container } from 'react-bootstrap';\n\n\nexport default class CharityCard extends Component {\n    render() {\n        return (\n            <div>\n                <Container>\n                    <Table responsive striped bordered hover variant=\"dark\">\n                        <thead>\n                            <tr>\n                                <th>Charity</th>\n                                <th>Mission</th>\n                                <th>Rating</th>\n                                <th>Donate Here</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>{this.props.charity.charityName}</td>\n                                <td>{this.props.charity.mission}</td>\n                                <td>{this.props.charity.currentRating.rating}</td>\n                                <td><a href={this.props.charity.charityNavigatorURL}>Donate</a></td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </Container>\n            </div>\n\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { API_KEY, API_ID } from '../config.js';\nimport CharityCard from './CharityCard';\n\n\nexport default class CharityNav extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            charity: [],\n        }\n    }\n    componentDidMount() {\n        fetch(`https://api.data.charitynavigator.org/v2/organizations/?app_id=${API_ID}&app_key=${API_KEY}&rated=1&categoryName='Civil Rights'`)\n            .then(res => res.json())\n            .then(data => {\n                this.setState({\n                    charity: data\n                })\n\n            })\n\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.charity.map((charity, index) => {\n                    return (\n                        <CharityCard charity={charity} key={index} />\n                    )\n\n                })}\n        \n            </div>\n        )\n    }\n}\n","export const API_KEY ='41a5a1237538b1d98fc0414bf9d29513';\nexport const API_ID ='af9e9115';","import * as firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyDwfuX34PENeQASunlBUhm4szrCjOz8RUE\",\n    authDomain: \"pressed-c1d0f.firebaseapp.com\",\n    databaseURL: \"https://pressed-c1d0f.firebaseio.com\",\n    projectId: \"pressed-c1d0f\",\n    storageBucket: \"pressed-c1d0f.appspot.com\",\n    messagingSenderId: \"724452178520\",\n    appId: \"1:724452178520:web:7b6f447539ba6ec35f282d\",\n    measurementId: \"G-N305ED04YK\"\n  };\n\n  //initializes firebase\n  firebase.initializeApp(firebaseConfig);\n\n  export const db = firebase.firestore();","import React, { Component } from 'react';\nimport { db } from './firebase';\nimport { Card, Container, Accordion } from 'react-bootstrap';\n\nexport default class Articles extends Component {\n    constructor() {\n        super()\n\n        this.state = {\n            articles: [],\n\n        }\n    }\n    //gets all articles from firebase db\n    componentDidMount() {\n        db.collection('articles').get()\n            .then((querySnapshot) => {\n                let newArticles = [];\n                querySnapshot.forEach(doc => {\n                    //using regex for formatting the string from the database\n                    let articleString = doc.data().content.replace(/\\\\n/g, '<br><br />')\n                    articleString = articleString.replace(/\\\\/g, \" \")\n                    const newObj = { ...doc.data(), content: articleString }\n                    newArticles.push(newObj);\n\n                })\n                this.setState({\n                    articles: newArticles\n                })\n            })\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.articles.map((article, index) => {\n                    return (\n                        <Container key={index} >\n                            <Accordion>\n                                <Card className=\"bg-dark text-white\">\n                                    <Accordion.Toggle as={Card.Header} eventKey=\"0\">{article.title}</Accordion.Toggle>\n                                    <Accordion.Collapse eventKey=\"0\">\n                                        <Card.Body><Card.Text dangerouslySetInnerHTML={{ __html: article.content }} /></Card.Body>\n                                    </Accordion.Collapse>\n                                </Card>\n                            </Accordion>\n                        </Container>\n                    )\n\n                })}\n            </div>\n        )\n    }\n}\n","\nimport { Jumbotron, Container } from 'react-bootstrap';\n\nimport React, { Component } from 'react'\n\nexport default class Jumbotronheader extends Component {\n  render() {\n    return (\n<Jumbotron fluid>\n  <Container>\n    <h1>Press(ed)</h1>\n  </Container>\n</Jumbotron>\n      \n    )\n  }\n}\n\n\n\n\n\n","import React, { Component } from 'react'\nimport { db } from './firebase';\nimport { Container, Form, Button, Card } from 'react-bootstrap';\n\nexport default class Suggestions extends Component {\n    state = {\n        name: '',\n        idea: '',\n        notSubmitted: true,\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        db.collection('suggestions').add({\n            name: this.state.name,\n            idea: JSON.stringify(this.state.idea),\n        })\n        this.setState({\n            notSubmitted: false,\n        })\n    }\n\n    handleChange = (e) => {\n        const { value, name } = e.target;\n        this.setState({\n            [name]: value\n        })\n    }\n\n    render() {\n        return (\n            <Container className=\"bg-dark text-white\">\n                {this.state.notSubmitted ? <Form onSubmit={this.handleSubmit}>\n                    <Form.Group controlId=\"exampleForm.ControlInput1\">\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control type=\"name\" placeholder=\"Name goes here...\" name='name' value={this.state.name} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                        <Form.Label>Suggestion</Form.Label>\n                        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"Ideas go here...\" name='idea' value={this.state.idea} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Button variant=\"light\" type='submit'>Submit</Button>\n                </Form>\n                    :\n                    <Card className=\"bg-dark text-white\">\n                        <Card.Body>\n                            <Card.Subtitle >Thanks for your feedback!</Card.Subtitle>\n                            <Card.Link href=\"/\">Home</Card.Link>\n                            <Card.Link href=\"/charitynav\">Donate</Card.Link>\n                        </Card.Body>\n                    </Card>  }\n            </Container>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Card, Container } from 'react-bootstrap';\n\n\nexport default class About extends Component {\n    render() {\n        return (\n            <Container className=\"bg-dark text-white\">\n                <Card className=\"bg-dark text-white\">\n                    <Card.Body>\n                        <Card.Title style={{ fontSize: 35 }}>Welcome To Press(ed)</Card.Title>\n                        <br></br>\n                        <Card.Subtitle style={{ fontSize: 30 }}>About</Card.Subtitle>\n                        <br></br>\n                        <Card.Text style={{ fontSize: 20 }}>\n                            Press(ed) is an educational resource that provides accessibility to historical information that isn't as widely known. By bridging this gap with knowledge, the goal is to have more empathy, compassion, and understanding for all underrepresented groups.\n                            <br></br>\n                            <br></br>\n                            If you would like to donate or want to hear about specific topics, feel free to donate through Charity Navigator and put an idea in the suggestion box.\n                            </Card.Text>\n                    </Card.Body>\n                </Card>\n            </Container>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Nav, Navbar } from 'react-bootstrap';\n\n\nexport default class Home extends Component {\n    render() {\n        return (\n            <div className='home'>\n                <Navbar fixed=\"top\" />\n      <Navbar bg=\"light\" variant=\"light\">\n        <Navbar.Brand href=\"/\">Press(ed)</Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"/articles\">Articles</Nav.Link>\n          <Nav.Link href=\"/charitynav\">Donate</Nav.Link>\n          <Nav.Link href=\"/suggestions\">Suggestion Box</Nav.Link>\n        </Nav>\n      </Navbar>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport { Route, BrowserRouter, Switch } from 'react-router-dom';\nimport CharityNav from './components/CharityNav';\nimport Articles from './components/Articles';\nimport Jumbotron from './components/Jumbotronheader';\nimport Suggestions  from './components/Suggestions';\nimport About from './components/About';\nimport Home from './components/Home';\n\n\nfunction App() {\n  return (\n    <div>\n      <Home />\n      <Jumbotron />\n      <BrowserRouter>\n      <Switch>\n        <Route exact path= '/' component= {About}></Route>\n        <Route path='/charitynav' component={CharityNav}></Route>\n        <Route path='/articles' component={Articles}></Route>\n        <Route path='/suggestions' component={Suggestions}></Route>\n        </Switch>\n      </BrowserRouter>\n      \n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}